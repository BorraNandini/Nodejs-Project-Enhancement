<!DOCTYPE html>
<html lang="en">
 
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
        /* Basic Styles */
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden;
            animation: fadeIn 1s ease-out forwards;
            background: linear-gradient(45deg, #f8c7dc, #a3c8f7, #f0e6b0, #f6d1d1);
            background-size: 400% 400%;
            animation: gradientAnimation 15s ease infinite;
        }

        .container {
            width: 100%;
            max-width: 400px;
            padding: 30px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            opacity: 0;
            transform: translateY(50px);
            animation: slideUp 1s ease-out forwards 0.5s;
        }

        h1 {
            color: #333;
            font-size: 2.2em;
            margin-bottom: 20px;
            text-align: center;
            opacity: 0;
            animation: fadeIn 1s ease-out forwards 0.5s;
        }

        .auth-form label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            font-size: 1.1em;
            color: #333;
        }

        .auth-form input {
            width: 100%;
            padding: 12px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
            transition: all 0.3s ease;
            font-size: 1em;
        }

        .auth-form input:focus {
            border-color: #7fa3d7;
            box-shadow: 0 0 5px rgba(127, 163, 215, 0.6);
        }

        .auth-form button {
            background-color: #7fa3d7;
            color: #fff;
            padding: 12px;
            border: none;
            border-radius: 5px;
            width: 100%;
            cursor: pointer;
            font-size: 1.1em;
            transition: background-color 0.3s ease;
        }

        .auth-form button:hover {
            background-color: #5e87c4;
        }

        p {
            margin-top: 20px;
            font-size: 1.2em;
            text-align: center;
            color: #333;
        }

        p a {
            color: #7fa3d7;
            font-weight: bold;
            text-decoration: none;
        }

        p a:hover {
            text-decoration: underline;
        }

        /* Error message box styles */
        .error-box {
            display: none;
            padding: 15px;
            margin-top: 20px;
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            border-radius: 5px;
            font-size: 1.1em;
            opacity: 0;
            animation: fadeInError 1s ease-out forwards;
        }

        /* Animation Keyframes */
        @keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInError {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        /* Gradient Background Animation */
        @keyframes gradientAnimation {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        /* Media Queries */
        @media (max-width: 768px) {
            h1 {
                font-size: 1.8em;
            }

            .auth-form label,
            .auth-form input,
            .auth-form button {
                font-size: 1em;
            }

            .container {
                padding: 20px;
            }
        }

    </style>
</head>
 
<body>
    <div class="container">
        <h1>Login</h1>
 
        <!-- Error message box -->
        <div id="errorBox" class="error-box">
            <button class="close-btn" onclick="closeErrorBox()">Ã—</button>
            <span id="errorMessage"></span>
        </div>
 
        <!-- Login Form -->
        <form action="/login" method="post" class="auth-form">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>
            <br>
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
            <br>
            <button type="submit">Login</button>
        </form>
 
        <p>Don't have an account? <a href="/register">Register here</a>.</p>
    </div>
 
    <script>
        // Function to display error message
        function displayErrorMessage(message) {
            const errorBox = document.getElementById('errorBox');
            const errorMessage = document.getElementById('errorMessage');
            errorMessage.textContent = message;  // Set the error message
            errorBox.style.display = 'block';  // Show the error box
        }
 
        // Function to close the error message box
        function closeErrorBox() {
            const errorBox = document.getElementById('errorBox');
            errorBox.style.display = 'none';  // Hide the error box
        }
 
        // Check if error message exists (sent from the backend)
        // window.onload = function () {
        //     const urlParams = new URLSearchParams(window.location.search);
        //     const errorMessage = urlParams.get('error');  // Get 'error' parameter from the URL
 
        //     if (errorMessage) {
        //         displayErrorMessage(decodeURIComponent(errorMessage));  // Display the error message in the error box
        //     }
        // };
    </script>
</body>
 
</html>